  late Future<String> themeColor;

  Future<String> getProfileColor() async {
    DocumentSnapshot snapshot =
        await db.collection('userData').doc(userID).get();
    String color = snapshot.get('themeColor');
    //print('URL is ' + newURL);
    // url = newURL;
    return color;
  }

  @override
  void initState() {
    super.initState();
    themeColor = getProfileColor();
  }


Widget colorButton() => FutureBuilder(
        future: themeColor,
        builder: (context, snapshot) {
          if (snapshot.hasData) {
            return ElevatedButton(
                style: ElevatedButton.styleFrom(
                    primary: Color(int.parse(snapshot.data.toString())),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(15),
                    ) // Background color
                    ),
                onPressed: () {
                  setState(() {
                    showColorPicker(context);
                  });
                },
                child: Text('Change Color Theme'));
          } else {
            return ElevatedButton(
                style: ElevatedButton.styleFrom(
                    primary: currentColor,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(15),
                    ) // Background color
                    ),
                onPressed: () {
                  setState(() {
                    showColorPicker(context);
                  });
                },
                child: Text('Change Color Theme'));
          }
        },
      );